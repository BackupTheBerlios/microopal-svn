/*
*	MicroOpal - compiler for a very simple opal slang written in opal
*	Copyright (C) 2005 Jan Kechel, Marc Schachtel
*
*	This program is free software; you can redistribute it and/or
*	modify it under the terms of the GNU General Public License
*	as published by the Free Software Foundation; either version 2
*	of the License, or (at your option) any later version.
*
*	This program is distributed in the hope that it will be useful,
*	but WITHOUT ANY WARRANTY; without even the implied warranty of
*	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*	GNU General Public License for more details.
*
*	You should have received a copy of the GNU General Public License
*	along with this program; if not, write to the Free Software
*	Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
*
*
*	the interpreter
*
*	to test this interpreter with oasys try:
*
*	#oasys
*	>f Interpreter.impl
*	Interpreter.impl>e intertest("fac")
*
*	Where fac ist the basename of a sourcefile ending with .mo (in this example: fac.mo)
*
*	Steps:
*	1. create base-environment with reserved words
*	2. parse 1st level of all DEFs in Absy, and add function-names to environment
*   3. evaluate MAIN
*/

SIGNATURE Interpreter

IMPORT	Absy		ONLY absy:SORT
	Diag		ONLY diag:SORT
	Options		ONLY options:SORT

IMPORT	Nat		ONLY nat:SORT	


TYPE value == 
	undefined (reason : diag)
	number    (value  : nat)
	boolean   (value  : bool)

FUN ` : value -> denotation

FUN interpret : options ** absy -> value

-- to test the checker from oasys
FUN intertest : denotation -> denotation


